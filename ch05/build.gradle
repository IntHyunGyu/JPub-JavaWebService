buildscript{
  repositories{
    mavenCentral()
  }
  dependencies{
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar{
  baseName = 'jpub-springBoot'
  version =  '0.1.0'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Swagger
    // http://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.4.0'
    // http://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.4.0'


    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'junit:junit:4.12'

}

project.ext{
    isIdea = System.getProperty('idea.active') != null || gradle.startParameter.taskNames.contains('idea') ||  gradle.startParameter.taskNames.contains('cleanIdea')
    isEclipse = System.getProperty("eclipse.launcher") != null || gradle.startParameter.taskNames.contains('eclipse') || gradle.startParameter.taskNames.contains('cleanEclipse')
}

task printTool{
    print(isIdea)
    print(isEclipse)
}


eclipse{
   classpath {
        downloadSources = true
        defaultOutputDir = file("${buildDir}/classes/main")
        }
}

idea{
    module{
        downloadSources = true
        downloadJavadoc = false
        inheritOutputDirs = false
        outputDir = file("${buildDir}/classes/main")
    }
}
